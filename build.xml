<project name="scuff" default="full-build" xmlns:ivy="antlib:org.apache.ivy.ant">

	<target name="ivy-download" depends="init">
		<mkdir dir="lib" />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" dest="${ivy.jar}" skipexisting="true" />
	</target>

	<target name="ivy-taskdef" depends="ivy-download">
		<path id="ivy.lib.path">
			<pathelement location="${ivy.jar}" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="scala-taskdef" depends="resolve-deps">
		<taskdef resource="scala/tools/ant/antlib.xml">
			<classpath>
				<pathelement location="${scala-lib.jar}" />
				<pathelement location="${scala-comp.jar}" />
				<pathelement location="${scala-refl.jar}" />
			</classpath>
		</taskdef>
	</target>

	<target name="resolve-deps" depends="ivy-taskdef" description="Resolve dependencies">
		<ivy:retrieve />
	</target>

	<target name="init" depends="clean">
		<property name="scala.major-minor" value="2.10" />
		<property name="scala.rev" value="2" />
		<property name="scala.version" value="${scala.major-minor}.${scala.rev}" />
		<property name="ivy.version" value="2.3.0" />
		<property name="scuff.version" value="1.3-SNAPSHOT" />
		<property name="ivy.jar" value="lib/ivy-${ivy.version}.jar" />
		<property name="scala-lib.jar" value="lib/scala-library-${scala.version}.jar" />
		<property name="scala-comp.jar" value="lib/scala-compiler-${scala.version}.jar" />
		<property name="scala-refl.jar" value="lib/scala-reflect-${scala.version}.jar" />
		<mkdir dir="build" />
	</target>

	<target name="clean">
		<delete dir="build" />
	</target>

	<target name="scalac">
		<scalac srcdir="${srcdir}" destdir="${build.destdir}" addparams="${scalac.params}">
			<bootclasspath>
				<pathelement location="${scala-comp.jar}" />
				<pathelement location="${scala-lib.jar}" />
				<pathelement location="${scala-refl.jar}" />
			</bootclasspath>

			<classpath>
				<pathelement path="${build.destdir}" />
				<fileset dir="lib">
					<include name="**/*.jar" />
					<exclude name="scala-*" />
				</fileset>
			</classpath>
			<include name="scala/**/*.scala" />
		</scalac>
	</target>

	<target name="compile-for-jar" depends="init, resolve-deps, scala-taskdef">
		<mkdir dir="build/main" />
		<antcall target="scalac">
			<param name="srcdir" value="src/main" />
			<param name="build.destdir" value="build/main" />
			<param name="scalac.params" value="-optimise -unchecked -deprecation -explaintypes -Xdisable-assertions" />
		</antcall>
	</target>

	<target name="compile-for-test" depends="init, resolve-deps, scala-taskdef">
		<property name="build.destdir" value="build/test" />
		<property name="scalac.params" value="-nowarn" />
		<mkdir dir="${build.destdir}" />
		<antcall target="scalac">
			<param name="srcdir" value="src/main" />
			<param name="build.destdir" value="${build.destdir}" />
			<param name="scalac.params" value="${scalac.params}" />
		</antcall>
		<antcall target="scalac">
			<param name="srcdir" value="src/test" />
			<param name="build.destdir" value="${build.destdir}" />
			<param name="scalac.params" value="${scalac.params}" />
		</antcall>
	</target>

	<target name="run-junit" depends="compile-for-test" description="Run JUnit tests">
		<copy todir="build/test">
			<fileset dir="src/main/resources" />
			<fileset dir="src/test/resources" />
		</copy>
		<mkdir dir="build/junit" />
		<junit fork="yes" haltonfailure="true" haltonerror="true">
			<formatter type="xml" />
			<jvmarg value="-ea" />
			<jvmarg value="-XX:-UseSplitVerifier" />
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
					<exclude name="ant-*" />
				</fileset>
				<pathelement path="build/test" />
				<pathelement location="${scala-lib.jar}" />
			</classpath>
			<batchtest todir="build/junit">
				<fileset dir="build/test">
					<include name="**/*Test*.class" />
					<exclude name="**/*$*.class" />
					<exclude name="**/*Abstract*.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="full-build" depends="run-junit, scaladocs, make-jar" />

	<target name="make-jar" depends="compile-for-jar" description="Make JAR">
		<tstamp />
		<manifest file="build/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<section name="scuff">
				<attribute name="Implementation-Title" value="scuff" />
				<attribute name="Implementation-Version" value="${scuff.version} ${TODAY}" />
				<attribute name="Implementation-Vendor" value="nilskp" />
				<attribute name="Sealed" value="true" />
			</section>
		</manifest>
		<copy todir="build/main">
			<fileset dir="src/main/resources" />
		</copy>
		<jar basedir="build/main" destfile="build/${ant.project.name}-${scuff.version}-scala-${scala.major-minor}.jar" index="true" manifest="build/MANIFEST.MF" />
	</target>

	<target name="scaladocs" depends="init, scala-taskdef">
		<mkdir dir="build/api" />
		<scaladoc destdir="build/api">
			<classpath>
				<fileset dir="lib">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="${scala-lib.jar}" />
			</classpath>
			<src path="src/main/scala" />
			<include name="**/*.scala" />
		</scaladoc>
	</target>
</project>
