plugins {
    id "com.jfrog.bintray" version '1.5'
}

version = "0.1.5-SNAPSHOT"

def bintrayVersion = {
    if (version.endsWith('-SNAPSHOT')) {
        java.text.SimpleDateFormat format = new java.text.SimpleDateFormat('yyMMddHHmm')
        format.setCalendar(Calendar.getInstance(TimeZone.getTimeZone('UTC')))
        return version.replace('SNAPSHOT', "b" + format.format(new Date()))
    } else {
        return version
    }
}()

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}
allprojects {
	repositories {
	    mavenCentral()
	}
	apply plugin: 'scala'
	apply plugin: 'maven-publish'
    apply plugin: 'eclipse'
	sourceCompatibility = 1.7
	targetCompatibility = 1.7
}

jar {
    baseName = "scuff_$vScala"
    manifest {
        attributes "Implementation-Title": "scuff", "Implementation-Version": version
    }
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allScala
}
task docsJar(type: Jar, dependsOn: scaladoc) {
    classifier "docs"
    from scaladoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'nilskp'
            artifactId jar.baseName
            version bintrayVersion

            from components.java
            artifact sourceJar
            artifact docsJar
        }
    }
}

bintray {
    user = System.properties.bintrayUser ?: "n/a"
    key = System.properties.bintrayApiKey ?: "n/a"
    dryRun = (user == "n/a" || key == "n/a")
    publish = !dryRun
    publications = ['maven']
    pkg {
        repo = "maven"
        name = "Scuff"
        version {
            name = bintrayVersion
        }
    }
}

dependencies {
    testCompile "junit:junit:$vJUnit"
    testCompile "org.mockito:mockito-all:$vMockito"

    compileOnly "org.scala-lang:scala-reflect:$vScala.+"

    compile "javax.mail:mail:$vMailApi"
    compile "io.fastjson:boon:$vBoon"

    compileOnly "javax.servlet:javax.servlet-api:$vServletApi"
}

